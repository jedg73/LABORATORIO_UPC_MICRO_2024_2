#include <stdlib.h>
#include <stdio.h>
#include <pic18f57q43.h>
#include <xc.h>
#include "cabzon.h"
#include "LCD.h"

#define _XTAL_FREQ 4000000UL

void configuro();
void LCD_init();

void main(void)
{
    configuro();
    LCD_init();
    POS_CURSOR(1, 4);
    ESCRIBE_MENSAJE("Backlight", 8);  // Muestra "Backlight" en la primera fila, columna 4

    while(1)
    {
        if(PORTBbits.RB1 == 0)  // Si el botón en RB1 está presionado
        {
            POS_CURSOR(2, 6);   // Posiciona el cursor en la segunda fila, columna 6
            ESCRIBE_MENSAJE("ON ", 3);  // Escribe "ON "
            LATBbits.LATB0 = 1;  // Activa el backlight (o cualquier LED conectado a RB0)
        }
        else
        {
            LATBbits.LATB0 = 0;  // Apaga el backlight (o LED conectado a RB0)
            POS_CURSOR(2, 6);    // Posiciona el cursor en la segunda fila, columna 6
            ESCRIBE_MENSAJE("OFF", 3);  // Escribe "OFF"
        }
    }
}

void configuro()
{
    OSCCON1 = 0x60;  // HFINTOSC
    OSCFRQ = 0x02;   // HFINTOSC a 4MHz
    OSCEN = 0x40;    // Habilitar HFINTOSC
    
    TRISBbits.TRISB0 = 0;  // Configura RB0 como salida
    TRISBbits.TRISB1 = 1;  // Configura RB1 como entrada
    TRISD = 0x00;          // Puerto D como salida
    ANSELB = 0x00;         // Puerto B como digital
    ANSELD = 0x00;         // Puerto D como digital
    WPUBbits.WPUB1 = 1;    // Habilita pull-up en RB1
}

void LCD_init()
{
    __delay_ms(29);   // Retardo inicial para estabilizar
    LCD_CONFIG();     // Configuración del LCD
    BORRAR_LCD();     // Limpiar el LCD
    CURSOR_HOME();    // Llevar el cursor al inicio
    CURSOR_ONOFF(OFF); // Apagar el cursor
}
